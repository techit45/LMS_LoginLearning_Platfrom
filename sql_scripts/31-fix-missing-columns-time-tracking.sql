-- ==========================================
-- Fix Missing Columns for Time Tracking System
-- Migration 31: Add missing columns that are being referenced in code
-- Date: 2025-08-06
-- ==========================================

BEGIN;

-- Add missing columns to time_entries table
ALTER TABLE time_entries 
    ADD COLUMN IF NOT EXISTS last_status_change TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    ADD COLUMN IF NOT EXISTS status_change_reason TEXT,
    ADD COLUMN IF NOT EXISTS is_emergency BOOLEAN DEFAULT false,
    ADD COLUMN IF NOT EXISTS emergency_reason TEXT,
    ADD COLUMN IF NOT EXISTS emergency_timestamp TIMESTAMP WITH TIME ZONE,
    ADD COLUMN IF NOT EXISTS emergency_checked_out BOOLEAN DEFAULT false,
    ADD COLUMN IF NOT EXISTS pause_duration_minutes INTEGER DEFAULT 0,
    ADD COLUMN IF NOT EXISTS session_paused BOOLEAN DEFAULT false,
    ADD COLUMN IF NOT EXISTS pause_start_time TIMESTAMP WITH TIME ZONE,
    ADD COLUMN IF NOT EXISTS pause_end_time TIMESTAMP WITH TIME ZONE,
    ADD COLUMN IF NOT EXISTS weekly_schedule_id UUID,
    ADD COLUMN IF NOT EXISTS teaching_course_id UUID,
    ADD COLUMN IF NOT EXISTS scheduled_start_time TIMESTAMP WITH TIME ZONE,
    ADD COLUMN IF NOT EXISTS scheduled_end_time TIMESTAMP WITH TIME ZONE,
    ADD COLUMN IF NOT EXISTS schedule_variance_minutes INTEGER,
    ADD COLUMN IF NOT EXISTS teaching_location TEXT,
    ADD COLUMN IF NOT EXISTS is_substitute BOOLEAN DEFAULT false,
    ADD COLUMN IF NOT EXISTS original_instructor_id UUID REFERENCES auth.users(id),
    ADD COLUMN IF NOT EXISTS substitute_reason TEXT,
    ADD COLUMN IF NOT EXISTS is_co_teaching BOOLEAN DEFAULT false,
    ADD COLUMN IF NOT EXISTS co_instructors TEXT[],
    ADD COLUMN IF NOT EXISTS expected_student_count INTEGER,
    ADD COLUMN IF NOT EXISTS actual_student_count INTEGER,
    ADD COLUMN IF NOT EXISTS attendance_rate DECIMAL(5,2),
    ADD COLUMN IF NOT EXISTS requires_approval BOOLEAN DEFAULT false,
    ADD COLUMN IF NOT EXISTS special_case TEXT,
    ADD COLUMN IF NOT EXISTS special_case_data JSONB;

-- Add trigger to update last_status_change when relevant fields change
CREATE OR REPLACE FUNCTION update_last_status_change()
RETURNS TRIGGER AS $$
BEGIN
    -- Update last_status_change when status, special_case, or emergency fields change
    IF OLD.status IS DISTINCT FROM NEW.status 
       OR OLD.special_case IS DISTINCT FROM NEW.special_case 
       OR OLD.is_emergency IS DISTINCT FROM NEW.is_emergency 
       OR OLD.session_paused IS DISTINCT FROM NEW.session_paused THEN
        NEW.last_status_change = CURRENT_TIMESTAMP;
    END IF;
    
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Create trigger for time_entries
DROP TRIGGER IF EXISTS update_time_entries_last_status_change ON time_entries;
CREATE TRIGGER update_time_entries_last_status_change
    BEFORE UPDATE ON time_entries
    FOR EACH ROW EXECUTE FUNCTION update_last_status_change();

-- Add indexes for performance
CREATE INDEX IF NOT EXISTS idx_time_entries_last_status_change ON time_entries(last_status_change);
CREATE INDEX IF NOT EXISTS idx_time_entries_is_emergency ON time_entries(is_emergency);
CREATE INDEX IF NOT EXISTS idx_time_entries_session_paused ON time_entries(session_paused);
CREATE INDEX IF NOT EXISTS idx_time_entries_weekly_schedule ON time_entries(weekly_schedule_id);
CREATE INDEX IF NOT EXISTS idx_time_entries_teaching_course ON time_entries(teaching_course_id);
CREATE INDEX IF NOT EXISTS idx_time_entries_requires_approval ON time_entries(requires_approval);
CREATE INDEX IF NOT EXISTS idx_time_entries_special_case ON time_entries(special_case);
CREATE INDEX IF NOT EXISTS idx_time_entries_substitute ON time_entries(is_substitute);

-- Add comments to explain the new columns
COMMENT ON COLUMN time_entries.last_status_change IS '‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î';
COMMENT ON COLUMN time_entries.status_change_reason IS '‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞';
COMMENT ON COLUMN time_entries.is_emergency IS '‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏≠‡∏≤‡∏ó‡πå‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô';
COMMENT ON COLUMN time_entries.emergency_reason IS '‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏´‡∏¢‡∏∏‡∏î‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô';
COMMENT ON COLUMN time_entries.emergency_timestamp IS '‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡∏´‡∏¢‡∏∏‡∏î‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô';
COMMENT ON COLUMN time_entries.emergency_checked_out IS '‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏≠‡∏≤‡∏ó‡πå‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß';
COMMENT ON COLUMN time_entries.pause_duration_minutes IS '‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏û‡∏±‡∏Å‡∏£‡∏ß‡∏° (‡∏ô‡∏≤‡∏ó‡∏µ)';
COMMENT ON COLUMN time_entries.session_paused IS '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ô';
COMMENT ON COLUMN time_entries.pause_start_time IS '‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏û‡∏±‡∏Å';
COMMENT ON COLUMN time_entries.pause_end_time IS '‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏Å';
COMMENT ON COLUMN time_entries.weekly_schedule_id IS 'ID ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏≠‡∏ô‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå';
COMMENT ON COLUMN time_entries.teaching_course_id IS 'ID ‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏ô';
COMMENT ON COLUMN time_entries.scheduled_start_time IS '‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡∏≤‡∏°‡∏ï‡∏≤‡∏£‡∏≤‡∏á';
COMMENT ON COLUMN time_entries.scheduled_end_time IS '‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏ï‡∏≤‡∏°‡∏ï‡∏≤‡∏£‡∏≤‡∏á';
COMMENT ON COLUMN time_entries.schedule_variance_minutes IS '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á (‡∏ô‡∏≤‡∏ó‡∏µ)';
COMMENT ON COLUMN time_entries.teaching_location IS '‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏ô';
COMMENT ON COLUMN time_entries.is_substitute IS '‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ô‡πÅ‡∏ó‡∏ô';
COMMENT ON COLUMN time_entries.original_instructor_id IS '‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÅ‡∏ó‡∏ô';
COMMENT ON COLUMN time_entries.substitute_reason IS '‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ô‡πÅ‡∏ó‡∏ô';
COMMENT ON COLUMN time_entries.is_co_teaching IS '‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ô‡∏£‡πà‡∏ß‡∏°';
COMMENT ON COLUMN time_entries.co_instructors IS '‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏£‡πà‡∏ß‡∏°‡∏™‡∏≠‡∏ô';
COMMENT ON COLUMN time_entries.expected_student_count IS '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡∏´‡∏ß‡∏±‡∏á';
COMMENT ON COLUMN time_entries.actual_student_count IS '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏à‡∏£‡∏¥‡∏á';
COMMENT ON COLUMN time_entries.attendance_rate IS '‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô (%)';
COMMENT ON COLUMN time_entries.requires_approval IS '‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥';
COMMENT ON COLUMN time_entries.special_case IS '‡∏Å‡∏£‡∏ì‡∏µ‡∏û‡∏¥‡πÄ‡∏®‡∏©';
COMMENT ON COLUMN time_entries.special_case_data IS '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏£‡∏ì‡∏µ‡∏û‡∏¥‡πÄ‡∏®‡∏© (JSON)';

COMMIT;

-- Verify the migration
SELECT 
    'Missing Columns Fix Complete! üéâ' as status,
    COUNT(*) as total_entries,
    COUNT(CASE WHEN last_status_change IS NOT NULL THEN 1 END) as entries_with_status_change,
    COUNT(CASE WHEN work_location IS NOT NULL THEN 1 END) as entries_with_work_location
FROM time_entries;