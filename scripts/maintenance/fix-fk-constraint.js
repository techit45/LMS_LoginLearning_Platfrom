// ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Foreign Key Constraint ‡∏ú‡πà‡∏≤‡∏ô browser console
// Copy ‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ô‡πÉ‡∏ô browser console

async function fixForeignKeyConstraint() {
  console.log('üîß ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Foreign Key Constraint...');
  
  try {
    const { supabase } = await import('/src/lib/supabaseClient.js');
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô
    console.log('üìä ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô...');
    
    const { data: courses, error: coursesError } = await supabase
      .from('teaching_courses')
      .select('id, name, company');
    
    if (coursesError) {
      console.error('‚ùå Error fetching teaching_courses:', coursesError);
      return;
    }
    
    console.log('üìö Teaching courses available:');
    console.table(courses);
    
    // ‡πÅ‡∏™‡∏î‡∏á SQL ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏±‡∏ô
    const sql = `-- ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Foreign Key Constraint
ALTER TABLE teaching_schedules 
DROP CONSTRAINT IF EXISTS teaching_schedules_course_id_fkey;

ALTER TABLE teaching_schedules 
ADD CONSTRAINT teaching_schedules_course_id_fkey 
FOREIGN KEY (course_id) REFERENCES teaching_courses(id) 
ON DELETE CASCADE;`;
    
    console.log('üìã SQL ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏±‡∏ô:');
    console.log(sql);
    
    // Copy ‡πÑ‡∏õ‡∏¢‡∏±‡∏á clipboard
    try {
      await navigator.clipboard.writeText(sql);
      console.log('üìã SQL copied to clipboard!');
    } catch (e) {
      console.log('‚ö†Ô∏è Manual copy required');
    }
    
    // ‡πÄ‡∏õ‡∏¥‡∏î Supabase SQL Editor
    window.open('https://supabase.com/dashboard/project/vuitwzisazvikrhtfthh/sql/new', '_blank');
    
    console.log('üëâ Steps:');
    console.log('1. Paste SQL in Supabase SQL Editor');
    console.log('2. Click Run');
    console.log('3. ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏£‡∏±‡∏ô SQL ‡πÅ‡∏•‡πâ‡∏ß ‡∏•‡∏≠‡∏á drag & drop ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
    console.log('4. Foreign key constraint ‡∏à‡∏∞ reference teaching_courses ‡πÅ‡∏•‡πâ‡∏ß! üéâ');
    
  } catch (error) {
    console.error('üí• ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
  }
}

// ‡∏£‡∏±‡∏ô function
fixForeignKeyConstraint();