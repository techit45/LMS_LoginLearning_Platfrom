const { createClient } = require('@supabase/supabase-js');

const supabase = createClient(
  'https://vuitwzisazvikrhtfthh.supabase.co', 
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZ1aXR3emlzYXp2aWtyaHRmdGhoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTEzOTU4ODIsImV4cCI6MjA2Njk3MTg4Mn0.VXCqythCUualJ7S9jVvnQUYe9BKnfMvbihtZT5c3qyE'
);

async function forceDeleteRecord43() {
  console.log('üóëÔ∏è FORCE DELETE Record ID 43');
  console.log('===============================');
  
  try {
    console.log('\n1Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:');
    
    const { data: current, error: currentError } = await supabase
      .from('weekly_schedules')
      .select('*')
      .eq('id', 43)
      .maybeSingle();
    
    if (current) {
      console.log('‚úÖ ‡∏û‡∏ö Record 43:', {
        id: current.id,
        time_slot: current.time_slot,
        day_of_week: current.day_of_week,
        year: current.year,
        week_number: current.week_number
      });
    } else {
      console.log('‚ÑπÔ∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö Record 43');
    }
    
    console.log('\n2Ô∏è‚É£ ‡∏•‡∏ö‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ Raw SQL (Force Delete):');
    
    // ‡∏•‡∏ö‡∏î‡πâ‡∏ß‡∏¢ SQL ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
    const { data: deleteResult, error: deleteError } = await supabase.rpc('execute_sql', {
      query: 'DELETE FROM weekly_schedules WHERE id = 43'
    });
    
    if (deleteError) {
      console.log('‚ùå SQL Delete failed:', deleteError.message);
      
      // ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ standard delete ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
      console.log('\n3Ô∏è‚É£ ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ Standard Delete:');
      const { error: stdDeleteError } = await supabase
        .from('weekly_schedules')
        .delete()
        .eq('id', 43);
        
      if (stdDeleteError) {
        console.log('‚ùå Standard delete failed:', stdDeleteError.message);
      } else {
        console.log('‚úÖ Standard delete succeeded');
      }
    } else {
      console.log('‚úÖ SQL Delete succeeded');
    }
    
    console.log('\n4Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:');
    
    const { data: afterDelete, error: afterError } = await supabase
      .from('weekly_schedules')
      .select('id')
      .eq('id', 43)
      .maybeSingle();
    
    if (afterDelete) {
      console.log('‚ùå Record 43 ‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡∏≠‡∏¢‡∏π‡πà - phantom record confirmed');
    } else {
      console.log('‚úÖ Record 43 ‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!');
    }
    
    console.log('\n5Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á Schedule ‡πÉ‡∏´‡∏°‡πà:');
    
    const testData = {
      year: 2025,
      week_number: 32,
      schedule_type: 'regular',
      instructor_id: '938c55f3-1cf9-427a-93ff-a6b7ff324f9e',
      day_of_week: 6,
      time_slot: '08:00',
      course_id: '8518befe-b992-4487-a96c-fa6b1f68ea13',
      duration: 60
    };
    
    const { data: newSchedule, error: createError } = await supabase
      .from('weekly_schedules')
      .insert([testData])
      .select('*')
      .single();
    
    if (createError) {
      console.log('‚ùå ‡∏¢‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ:', createError.code, createError.message);
    } else {
      console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Schedule ‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß! ID:', newSchedule.id);
      console.log('üéâ ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ phantom record ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß!');
    }
    
  } catch (error) {
    console.error('üí• Error:', error.message);
  }
}

forceDeleteRecord43().catch(console.error);