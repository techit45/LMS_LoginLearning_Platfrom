// Sync schedules ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á real-time system ‡πÅ‡∏•‡∏∞ legacy data
// ‡∏£‡∏±‡∏ô‡πÉ‡∏ô browser console

async function syncSchedules() {
  console.log('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á sync ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏£‡∏≤‡∏á...');
  
  try {
    const { supabase } = await import('/src/lib/supabaseClient.js');
    
    // 1. ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    console.log('üìä ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô...');
    
    const { data: allSchedules, error: fetchError } = await supabase
      .from('teaching_schedules')
      .select('*')
      .order('created_at', { ascending: false });
    
    if (fetchError) {
      console.error('‚ùå Error fetching schedules:', fetchError);
      return;
    }
    
    console.log(`üìÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ${allSchedules?.length || 0} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:`);
    allSchedules?.forEach(s => {
      console.log(`  - ${s.course_title} (‡∏ß‡∏±‡∏ô ${s.day_of_week}, ‡∏ä‡πà‡∏ß‡∏á ${s.time_slot_index}) ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${s.week_start_date}`);
    });
    
    // 2. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï week_start_date ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    const currentWeekStart = '2025-08-04'; // Monday ‡∏Ç‡∏≠‡∏á‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏π
    console.log(`\nüóìÔ∏è ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï week_start_date ‡πÄ‡∏õ‡πá‡∏ô ${currentWeekStart}...`);
    
    let updated = 0;
    for (const schedule of allSchedules || []) {
      if (schedule.week_start_date !== currentWeekStart) {
        console.log(`üîÑ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï ${schedule.course_title} ‡∏à‡∏≤‡∏Å ${schedule.week_start_date} ‡πÄ‡∏õ‡πá‡∏ô ${currentWeekStart}`);
        
        const { error: updateError } = await supabase
          .from('teaching_schedules')
          .update({ week_start_date: currentWeekStart })
          .eq('id', schedule.id);
        
        if (updateError) {
          console.error('‚ùå Error updating:', updateError.message);
        } else {
          updated++;
          console.log('‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
        }
      }
    }
    
    console.log(`\nüìä ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${updated} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    
    // 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
    console.log('\nüîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï...');
    
    const { data: updatedSchedules, error: checkError } = await supabase
      .from('teaching_schedules')
      .select('*')
      .eq('week_start_date', currentWeekStart)
      .eq('company', 'login')
      .order('day_of_week')
      .order('time_slot_index');
    
    if (checkError) {
      console.error('‚ùå Error checking updated schedules:', checkError);
      return;
    }
    
    console.log(`‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå ${currentWeekStart}:`);
    updatedSchedules?.forEach(s => {
      console.log(`  - ${s.course_title} (‡∏ß‡∏±‡∏ô ${s.day_of_week}, ‡∏ä‡πà‡∏ß‡∏á ${s.time_slot_index})`);
    });
    
    // 4. ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ
    console.log('\nüóëÔ∏è ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô...');
    
    const { data: oldSchedules, error: oldError } = await supabase
      .from('teaching_schedules')
      .delete()
      .neq('week_start_date', currentWeekStart)
      .select();
    
    if (!oldError) {
      console.log(`üóëÔ∏è ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤ ${oldSchedules?.length || 0} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    }
    
    // 5. ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
    console.log('\nüîÑ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÉ‡∏ô 2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ...');
    console.log('üéâ ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä real-time system ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!');
    
    setTimeout(() => {
      window.location.reload();
    }, 2000);
    
  } catch (error) {
    console.error('üí• ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
    
    // Manual fix
    console.log('\nüìã ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÅ‡∏ö‡∏ö manual:');
    console.log('‡∏£‡∏±‡∏ô SQL ‡∏ô‡∏µ‡πâ‡πÉ‡∏ô Supabase Dashboard:');
    
    const sql = `-- ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï week_start_date ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
UPDATE teaching_schedules 
SET week_start_date = '2025-08-04'
WHERE week_start_date != '2025-08-04';

-- ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
-- DELETE FROM teaching_schedules WHERE week_start_date != '2025-08-04';

-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
SELECT course_title, day_of_week, time_slot_index, week_start_date 
FROM teaching_schedules 
WHERE week_start_date = '2025-08-04'
ORDER BY day_of_week, time_slot_index;`;
    
    console.log(sql);
    
    await navigator.clipboard.writeText(sql);
    console.log('üìã SQL copied to clipboard!');
    
    window.open('https://supabase.com/dashboard/project/vuitwzisazvikrhtfthh/sql/new', '_blank');
  }
}

// ‡∏£‡∏±‡∏ô function
syncSchedules();