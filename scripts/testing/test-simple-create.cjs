const { createClient } = require('@supabase/supabase-js');

const supabase = createClient(
  'https://vuitwzisazvikrhtfthh.supabase.co', 
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZ1aXR3emlzYXp2aWtyaHRmdGhoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTEzOTU4ODIsImV4cCI6MjA2Njk3MTg4Mn0.VXCqythCUualJ7S9jVvnQUYe9BKnfMvbihtZT5c3qyE'
);

async function testSimpleCreate() {
  console.log('üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á Schedule ‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢‡πÜ');
  console.log('=============================================');
  
  try {
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏≠‡∏∑‡πà‡∏ô
    console.log('\n1Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏µ‡πà slot ‡πÉ‡∏´‡∏°‡πà (Day 1, 10:00):');
    
    const simpleData = {
      year: 2025,
      week_number: 32,
      schedule_type: 'regular',
      instructor_id: '938c55f3-1cf9-427a-93ff-a6b7ff324f9e',
      day_of_week: 1, // ‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå
      time_slot: '10:00', // ‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡∏°‡πà
      course_id: '8518befe-b992-4487-a96c-fa6b1f68ea13',
      duration: 60,
      start_time: '10:00',
      end_time: '11:00'
    };
    
    const { data: simple, error: simpleError } = await supabase
      .from('weekly_schedules')
      .insert([simpleData])
      .select('*')
      .single();
    
    if (simpleError) {
      console.log('‚ùå ‡πÄ‡∏™‡∏µ‡∏¢‡πÉ‡∏à ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ:', simpleError.code, simpleError.message);
      
      if (simpleError.code === '42501') {
        console.log('üîí RLS policy ‡∏ö‡∏•‡πá‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á - ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ permission');
      }
    } else {
      console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß! ID:', simple.id);
      
      // ‡∏•‡∏ö‡∏ó‡∏¥‡πâ‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏¢‡∏∞
      await supabase.from('weekly_schedules').delete().eq('id', simple.id);
      console.log('üóëÔ∏è ‡∏•‡∏ö test record ‡πÅ‡∏•‡πâ‡∏ß');
    }
    
    console.log('\n2Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö User ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:');
    
    const { data: { user }, error: userError } = await supabase.auth.getUser();
    
    if (user) {
      console.log('üë§ Current user:', {
        id: user.id,
        email: user.email,
        role: user.role
      });
    } else {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö user ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ login');
    }
    
    console.log('\n3Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ö‡∏ö minimal:');
    
    const minimalData = {
      year: 2026, // ‡∏õ‡∏µ‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏ä‡∏ô
      week_number: 1,
      schedule_type: 'test',
      instructor_id: '938c55f3-1cf9-427a-93ff-a6b7ff324f9e',
      day_of_week: 0,
      time_slot: '12:00',
      course_id: '8518befe-b992-4487-a96c-fa6b1f68ea13'
    };
    
    const { data: minimal, error: minimalError } = await supabase
      .from('weekly_schedules')
      .insert([minimalData])
      .select('*')
      .single();
    
    if (minimalError) {
      console.log('‚ùå Minimal create failed:', minimalError.code, minimalError.message);
    } else {
      console.log('‚úÖ Minimal create succeeded! ID:', minimal.id);
      
      // ‡∏•‡∏ö‡∏ó‡∏¥‡πâ‡∏á
      await supabase.from('weekly_schedules').delete().eq('id', minimal.id);
      console.log('üóëÔ∏è ‡∏•‡∏ö test record ‡πÅ‡∏•‡πâ‡∏ß');
    }
    
  } catch (error) {
    console.error('üí• Test error:', error.message);
  }
}

testSimpleCreate().catch(console.error);