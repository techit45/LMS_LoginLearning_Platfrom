const { createClient } = require('@supabase/supabase-js');

const supabase = createClient(
  'https://vuitwzisazvikrhtfthh.supabase.co',
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZ1aXR3emlzYXp2aWtyaHRmdGhoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTEzOTU4ODIsImV4cCI6MjA2Njk3MTg4Mn0.VXCqythCUualJ7S9jVvnQUYe9BKnfMvbihtZT5c3qyE'
);

async function createDirectSampleData() {
  console.log('üìä Creating sample data using direct API calls...\n');
  
  try {
    // =====================================================
    // 1. CREATE SAMPLE USER PROFILES
    // =====================================================
    console.log('üë• Creating sample user profiles...');
    
    const sampleUsers = [
      {
        user_id: 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11',
        full_name: '‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ',
        email: 'somchai@student.com',
        role: 'student',
        phone: '081-234-5678',
        bio: '‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ä‡∏±‡πâ‡∏ô ‡∏°.6 ‡∏™‡∏ô‡πÉ‡∏à‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå',
        location: '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø'
      },
      {
        user_id: 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a12',
        full_name: '‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏™‡∏°‡πÉ‡∏™ ‡∏£‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô',
        email: 'somsai@student.com',
        role: 'student',
        phone: '089-876-5432',
        bio: '‡∏´‡∏•‡∏á‡πÉ‡∏´‡∏•‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå',
        location: '‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà'
      },
      {
        user_id: 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a13',
        full_name: '‡∏ô‡∏≤‡∏¢‡∏ò‡∏ô‡∏≤‡∏Å‡∏£ ‡πÄ‡∏Å‡πà‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô',
        email: 'thanakorn@student.com',
        role: 'student',
        phone: '092-555-7777',
        bio: '‡∏ä‡∏≠‡∏ö‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° Python',
        location: '‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô'
      },
      {
        user_id: 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a14',
        full_name: '‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ß‡∏¥‡∏ä‡∏≤‡∏ç ‡∏ä‡∏≥‡∏ô‡∏≤‡∏ç',
        email: 'wichan@instructor.com',
        role: 'instructor',
        phone: '081-999-8888',
        bio: '‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏™‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°',
        location: '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø'
      },
      {
        user_id: 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a15',
        full_name: '‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡πÄ‡∏Å‡πà‡∏á‡∏™‡∏≠‡∏ô',
        email: 'somying@instructor.com',
        role: 'instructor',
        phone: '089-777-6666',
        bio: '‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡∏î‡πâ‡∏≤‡∏ô Web Development',
        location: '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø'
      },
      {
        user_id: 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a16',
        full_name: '‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô',
        email: 'admin@loginlearning.com',
        role: 'admin',
        phone: '081-000-1111',
        bio: '‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö Login Learning Platform',
        location: '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø'
      }
    ];
    
    let userCount = 0;
    for (const user of sampleUsers) {
      try {
        const { error } = await supabase
          .from('user_profiles')
          .insert(user);
        
        if (!error) {
          userCount++;
          console.log(`‚úÖ Created user: ${user.full_name} (${user.role})`);
        } else {
          console.log(`‚ö†Ô∏è  User ${user.full_name}: ${error.message}`);
        }
      } catch (err) {
        console.log(`üí• User ${user.full_name}: ${err.message}`);
      }
    }
    
    console.log(`üìä Created ${userCount} users successfully\n`);
    
    // =====================================================
    // 2. CREATE SAMPLE COURSES
    // =====================================================
    console.log('üìö Creating sample courses...');
    
    const instructorId = 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a14'; // ‡∏ß‡∏¥‡∏ä‡∏≤‡∏ç
    const instructor2Id = 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a15'; // ‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á
    
    const sampleCourses = [
      {
        id: 'c0eebc99-9c0b-4ef8-bb6d-6bb9bd380a01',
        title: '‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° Python',
        description: '‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° Python ‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà syntax ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡πÑ‡∏õ‡∏à‡∏ô‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡∏à‡∏£‡∏¥‡∏á',
        instructor_id: instructorId,
        is_active: true,
        difficulty_level: 'beginner',
        duration_hours: 40
      },
      {
        id: 'c0eebc99-9c0b-4ef8-bb6d-6bb9bd380a02',
        title: '‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏î‡πâ‡∏ß‡∏¢ React ‡πÅ‡∏•‡∏∞ Node.js',
        description: '‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÅ‡∏≠‡∏û‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô‡πÅ‡∏ö‡∏ö Full Stack ‡∏î‡πâ‡∏ß‡∏¢ React ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Frontend ‡πÅ‡∏•‡∏∞ Node.js ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Backend ‡∏£‡∏ß‡∏°‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
        instructor_id: instructor2Id,
        is_active: true,
        difficulty_level: 'intermediate',
        duration_hours: 60
      },
      {
        id: 'c0eebc99-9c0b-4ef8-bb6d-6bb9bd380a03',
        title: '‡∏õ‡∏±‡∏ç‡∏ç‡∏≤‡∏õ‡∏£‡∏∞‡∏î‡∏¥‡∏©‡∏ê‡πå‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Ç‡∏≠‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á',
        description: '‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏´‡∏•‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á AI ‡πÅ‡∏•‡∏∞ Machine Learning ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏à‡∏£‡∏¥‡∏á‡∏î‡πâ‡∏ß‡∏¢ Python ‡πÅ‡∏•‡∏∞ TensorFlow',
        instructor_id: instructorId,
        is_active: true,
        difficulty_level: 'advanced',
        duration_hours: 80
      }
    ];
    
    let courseCount = 0;
    for (const course of sampleCourses) {
      try {
        const { error } = await supabase
          .from('courses')
          .upsert(course);
        
        if (!error) {
          courseCount++;
          console.log(`‚úÖ Created course: ${course.title}`);
        } else {
          console.log(`‚ö†Ô∏è  Course ${course.title}: ${error.message}`);
        }
      } catch (err) {
        console.log(`üí• Course ${course.title}: ${err.message}`);
      }
    }
    
    console.log(`üìä Created/Updated ${courseCount} courses successfully\n`);
    
    // =====================================================
    // 3. CREATE SAMPLE COURSE CONTENT
    // =====================================================
    console.log('üìñ Creating sample course content...');
    
    const sampleContent = [
      {
        id: 'cc0ebc99-9c0b-4ef8-bb6d-6bb9bd380a01',
        course_id: 'c0eebc99-9c0b-4ef8-bb6d-6bb9bd380a01',
        title: '‡∏ö‡∏ó‡∏ó‡∏µ‡πà 1: ‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡∏Å‡∏±‡∏ö Python',
        content_type: 'lesson',
        content: 'Python ‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏°‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏á‡πà‡∏≤‡∏¢ ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ‡πÉ‡∏ô‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏°‡∏≤‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡∏Å‡∏±‡∏ö Python ‡∏Å‡∏±‡∏ô...',
        order_index: 1,
        is_free: true,
        is_preview: true,
        duration_minutes: 45
      },
      {
        id: 'cc0ebc99-9c0b-4ef8-bb6d-6bb9bd380a02',
        course_id: 'c0eebc99-9c0b-4ef8-bb6d-6bb9bd380a01',
        title: '‡∏ö‡∏ó‡∏ó‡∏µ‡πà 2: ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
        content_type: 'lesson',
        content: '‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÉ‡∏ô Python ‡πÅ‡∏•‡∏∞‡∏ä‡∏ô‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÄ‡∏ä‡πà‡∏ô string, integer, float, boolean...',
        order_index: 2,
        is_free: false,
        is_preview: true,
        duration_minutes: 50
      },
      {
        id: 'cc0ebc99-9c0b-4ef8-bb6d-6bb9bd380a03',
        course_id: 'c0eebc99-9c0b-4ef8-bb6d-6bb9bd380a02',
        title: '‡∏ö‡∏ó‡∏ô‡∏≥: ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å React',
        content_type: 'lesson',
        content: 'React ‡πÄ‡∏õ‡πá‡∏ô JavaScript Library ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á User Interface ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏¥‡∏¢‡∏°‡∏™‡∏π‡∏á...',
        order_index: 1,
        is_free: true,
        is_preview: true,
        duration_minutes: 40
      }
    ];
    
    let contentCount = 0;
    for (const content of sampleContent) {
      try {
        const { error } = await supabase
          .from('course_content')
          .upsert(content);
        
        if (!error) {
          contentCount++;
          console.log(`‚úÖ Created content: ${content.title}`);
        } else {
          console.log(`‚ö†Ô∏è  Content ${content.title}: ${error.message}`);
        }
      } catch (err) {
        console.log(`üí• Content ${content.title}: ${err.message}`);
      }
    }
    
    console.log(`üìä Created ${contentCount} course content items successfully\n`);
    
    // =====================================================
    // 4. CREATE SAMPLE ENROLLMENTS
    // =====================================================
    console.log('üìö Creating sample enrollments...');
    
    const sampleEnrollments = [
      {
        user_id: 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11',
        course_id: 'c0eebc99-9c0b-4ef8-bb6d-6bb9bd380a01',
        progress: 85.5,
        is_active: true
      },
      {
        user_id: 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11',
        course_id: 'c0eebc99-9c0b-4ef8-bb6d-6bb9bd380a02',
        progress: 45.2,
        is_active: true
      },
      {
        user_id: 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a12',
        course_id: 'c0eebc99-9c0b-4ef8-bb6d-6bb9bd380a01',
        progress: 92.0,
        is_active: true
      },
      {
        user_id: 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a12',
        course_id: 'c0eebc99-9c0b-4ef8-bb6d-6bb9bd380a03',
        progress: 15.8,
        is_active: true
      },
      {
        user_id: 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a13',
        course_id: 'c0eebc99-9c0b-4ef8-bb6d-6bb9bd380a02',
        progress: 78.3,
        is_active: true
      }
    ];
    
    let enrollmentCount = 0;
    for (const enrollment of sampleEnrollments) {
      try {
        const { error } = await supabase
          .from('enrollments')
          .upsert(enrollment);
        
        if (!error) {
          enrollmentCount++;
          console.log(`‚úÖ Created enrollment: User ${enrollment.user_id.slice(-2)} -> Course ${enrollment.course_id.slice(-2)}`);
        } else {
          console.log(`‚ö†Ô∏è  Enrollment error: ${error.message}`);
        }
      } catch (err) {
        console.log(`üí• Enrollment exception: ${err.message}`);
      }
    }
    
    console.log(`üìä Created ${enrollmentCount} enrollments successfully\n`);
    
    // =====================================================
    // 5. CREATE SAMPLE COURSE PROGRESS
    // =====================================================
    console.log('üìà Creating sample course progress...');
    
    const sampleProgress = [
      {
        user_id: 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11',
        course_id: 'c0eebc99-9c0b-4ef8-bb6d-6bb9bd380a01',
        content_id: 'cc0ebc99-9c0b-4ef8-bb6d-6bb9bd380a01',
        progress_type: 'content',
        progress_value: 100.0,
        completed: true,
        time_spent: 2700
      },
      {
        user_id: 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11',
        course_id: 'c0eebc99-9c0b-4ef8-bb6d-6bb9bd380a01',
        content_id: 'cc0ebc99-9c0b-4ef8-bb6d-6bb9bd380a02',
        progress_type: 'content',
        progress_value: 75.5,
        completed: false,
        time_spent: 2100
      },
      {
        user_id: 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a12',
        course_id: 'c0eebc99-9c0b-4ef8-bb6d-6bb9bd380a01',
        content_id: 'cc0ebc99-9c0b-4ef8-bb6d-6bb9bd380a01',
        progress_type: 'content',
        progress_value: 100.0,
        completed: true,
        time_spent: 2850
      },
      {
        user_id: 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a13',
        course_id: 'c0eebc99-9c0b-4ef8-bb6d-6bb9bd380a02',
        content_id: 'cc0ebc99-9c0b-4ef8-bb6d-6bb9bd380a03',
        progress_type: 'content',
        progress_value: 85.0,
        completed: false,
        time_spent: 1800
      }
    ];
    
    let progressCount = 0;
    for (const progress of sampleProgress) {
      try {
        const { error } = await supabase
          .from('course_progress')
          .upsert(progress);
        
        if (!error) {
          progressCount++;
          console.log(`‚úÖ Created progress: ${progress.progress_value}% for user ${progress.user_id.slice(-2)}`);
        } else {
          console.log(`‚ö†Ô∏è  Progress error: ${error.message}`);
        }
      } catch (err) {
        console.log(`üí• Progress exception: ${err.message}`);
      }
    }
    
    console.log(`üìä Created ${progressCount} progress records successfully\n`);
    
    // =====================================================
    // VERIFICATION
    // =====================================================
    console.log('üß™ Verifying sample data creation...');
    
    const tables = [
      'user_profiles',
      'courses',
      'course_content', 
      'enrollments',
      'course_progress'
    ];
    
    let totalRecords = 0;
    for (const table of tables) {
      try {
        const { count, error } = await supabase
          .from(table)
          .select('*', { count: 'exact', head: true });
        
        if (!error) {
          totalRecords += count || 0;
          console.log(`üìä ${table}: ${count || 0} records`);
        } else {
          console.log(`‚ùå ${table}: ${error.message}`);
        }
      } catch (err) {
        console.log(`üí• ${table}: ${err.message}`);
      }
    }
    
    console.log(`\nüéØ SAMPLE DATA CREATION COMPLETED!`);
    console.log(`=====================================`);
    console.log(`Total Records Created: ${totalRecords}`);
    console.log(`‚úÖ Users: Students, Instructors, Admin`);
    console.log(`‚úÖ Courses: Python, React, AI/ML`);
    console.log(`‚úÖ Course Content: Lessons and materials`);
    console.log(`‚úÖ Enrollments: Student-course relationships`);
    console.log(`‚úÖ Progress: Learning progress tracking`);
    console.log(`\nüöÄ Dashboard is now ready with realistic sample data!`);
    console.log(`   Visit your dashboard to see the populated analytics`);
    
  } catch (error) {
    console.error('üí• Sample data creation failed:', error);
  }
}

createDirectSampleData()
  .then(() => {
    console.log('\n‚úÖ Sample data creation process completed!');
    process.exit(0);
  })
  .catch(error => {
    console.error('üí• Process failed:', error);
    process.exit(1);
  });