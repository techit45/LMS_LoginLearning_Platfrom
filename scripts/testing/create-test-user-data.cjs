const { createClient } = require('@supabase/supabase-js');

const supabase = createClient(
  'https://vuitwzisazvikrhtfthh.supabase.co', 
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZ1aXR3emlzYXp2aWtyaHRmdGhoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTEzOTU4ODIsImV4cCI6MjA2Njk3MTg4Mn0.VXCqythCUualJ7S9jVvnQUYe9BKnfMvbihtZT5c3qyE'
);

async function createTestData() {
  console.log('üß™ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö GPS');
  console.log('===================================');

  try {
    // 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á test user profile ‡πÉ‡∏ô auth.users table ‡∏î‡πâ‡∏ß‡∏¢ service role key
    // (‡∏õ‡∏Å‡∏ï‡∏¥‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ service role key ‡πÅ‡∏ï‡πà‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡∏à‡∏∞‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢ anon key ‡∏Å‡πà‡∏≠‡∏ô)
    
    console.log('\n1Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á user_profiles ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà:');
    
    // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ users ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const { data: existingUsers, error: userError } = await supabase
      .from('user_profiles')
      .select('*')
      .limit(5);
    
    if (userError) {
      console.log('‚ùå Error:', userError.message);
      return;
    }
    
    console.log(`‚úÖ ‡∏û‡∏ö user profiles: ${existingUsers.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    
    if (existingUsers.length > 0) {
      console.log('üìã Users ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà:');
      existingUsers.forEach((user, index) => {
        console.log(`   ${index + 1}. ${user.full_name || user.email} (${user.role}) - ID: ${user.user_id}`);
      });
      
      // ‡πÉ‡∏ä‡πâ user ‡∏Ñ‡∏ô‡πÅ‡∏£‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
      const testUserId = existingUsers[0].user_id;
      
      console.log(`\n2Ô∏è‚É£ ‡πÉ‡∏ä‡πâ user ID: ${testUserId} ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö`);
      
      // 3. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏ö‡∏≤‡∏á‡∏û‡∏•‡∏±‡∏î (‡πÄ‡∏õ‡πá‡∏ô‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏´‡∏•‡∏±‡∏Å)
      console.log('\n3Ô∏è‚É£ ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏ö‡∏≤‡∏á‡∏û‡∏•‡∏±‡∏î:');
      const { data: locations, error: locError } = await supabase
        .from('company_locations')
        .select('*')
        .ilike('location_name', '%‡∏ö‡∏≤‡∏á‡∏û‡∏•‡∏±‡∏î%')
        .limit(1);
      
      if (locError) {
        console.log('‚ùå Error:', locError.message);
        return;
      }
      
      if (locations.length === 0) {
        console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏ö‡∏≤‡∏á‡∏û‡∏•‡∏±‡∏î');
        return;
      }
      
      const testLocation = locations[0];
      console.log(`‚úÖ ‡∏û‡∏ö‡∏®‡∏π‡∏ô‡∏¢‡πå: ${testLocation.location_name}`);
      console.log(`   GPS: ${testLocation.latitude}, ${testLocation.longitude}`);
      console.log(`   ‡∏£‡∏±‡∏®‡∏°‡∏µ: ${testLocation.radius_meters} ‡πÄ‡∏°‡∏ï‡∏£`);
      
      // 4. ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏Å‡∏•‡πâ‡∏Å‡∏±‡∏ö‡∏®‡∏π‡∏ô‡∏¢‡πå
      console.log('\n4Ô∏è‚É£ ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á:');
      
      // ‡∏à‡∏≥‡∏•‡∏≠‡∏á GPS ‡πÉ‡∏Å‡∏•‡πâ‡∏®‡∏π‡∏ô‡∏¢‡πå (‡πÄ‡∏û‡∏¥‡πà‡∏°/‡∏•‡∏î 0.0001 degree ‚âà 11 ‡πÄ‡∏°‡∏ï‡∏£)
      const userLat = testLocation.latitude + 0.0005; // ‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 55 ‡πÄ‡∏°‡∏ï‡∏£
      const userLng = testLocation.longitude + 0.0005;
      
      // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á
      const R = 6371e3;
      const œÜ1 = testLocation.latitude * Math.PI / 180;
      const œÜ2 = userLat * Math.PI / 180;
      const ŒîœÜ = (userLat - testLocation.latitude) * Math.PI / 180;
      const ŒîŒª = (userLng - testLocation.longitude) * Math.PI / 180;
      const a = Math.sin(ŒîœÜ/2) * Math.sin(ŒîœÜ/2) +
                Math.cos(œÜ1) * Math.cos(œÜ2) *
                Math.sin(ŒîŒª/2) * Math.sin(ŒîŒª/2);
      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
      const distance = R * c;
      
      console.log(`üìç ‡∏à‡∏≥‡∏•‡∏≠‡∏á GPS: ${userLat}, ${userLng}`);
      console.log(`üìê ‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏®‡∏π‡∏ô‡∏¢‡πå: ${Math.round(distance)} ‡πÄ‡∏°‡∏ï‡∏£`);
      console.log(`${distance <= testLocation.radius_meters ? '‚úÖ ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏±‡∏®‡∏°‡∏µ' : '‚ùå ‡∏ô‡∏≠‡∏Å‡∏£‡∏±‡∏®‡∏°‡∏µ'}`);
      
      // 5. ‡∏•‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
      console.log('\n5Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô:');
      
      const registrationData = {
        user_id: testUserId,
        location_id: testLocation.id,
        user_latitude: userLat,
        user_longitude: userLng,
        distance_from_center: distance,
        device_info: {
          userAgent: 'Test Node.js Script',
          platform: 'Test Platform',
          language: 'th-TH',
          timestamp: new Date().toISOString()
        },
        notes: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏à‡∏≤‡∏Å Node.js script'
      };
      
      const { data: regData, error: regError } = await supabase
        .from('user_registered_locations')
        .upsert(registrationData, {
          onConflict: 'user_id,location_id,registration_date'
        })
        .select()
        .single();
      
      if (regError) {
        console.log('‚ùå Error ‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô:', regError.message);
        console.log('   Code:', regError.code);
        console.log('   Details:', regError.details);
        console.log('   Hint:', regError.hint);
      } else {
        console.log('‚úÖ ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
        console.log(`   Registration ID: ${regData.id}`);
        console.log(`   ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${regData.registration_date}`);
        console.log(`   ‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á: ${Math.round(regData.distance_from_center)} ‡πÄ‡∏°‡∏ï‡∏£`);
      }
      
      // 6. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏£‡πâ‡∏≠‡∏° join
      console.log('\n6Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏£‡πâ‡∏≠‡∏° join:');
      
      const { data: joinData, error: joinError } = await supabase
        .from('user_registered_locations')
        .select(`
          *,
          location:company_locations(location_name, address)
        `)
        .eq('user_id', testUserId)
        .limit(1);
      
      if (joinError) {
        console.log('‚ùå Error ‡∏Å‡∏≤‡∏£ join:', joinError.message);
      } else {
        console.log('‚úÖ ‡∏Å‡∏≤‡∏£ join ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
        if (joinData.length > 0) {
          console.log(`   ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ${joinData.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
          console.log(`   ‡∏®‡∏π‡∏ô‡∏¢‡πå: ${joinData[0].location?.location_name || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`);
        }
      }
      
    } else {
      console.log('\n‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö user profiles - ‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á user ‡∏Å‡πà‡∏≠‡∏ô');
      console.log('üí° ‡∏ß‡∏¥‡∏ò‡∏µ‡∏™‡∏£‡πâ‡∏≤‡∏á user:');
      console.log('   1. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤ Sign up ‡πÉ‡∏ô‡πÅ‡∏≠‡∏õ');
      console.log('   2. ‡∏™‡∏£‡πâ‡∏≤‡∏á account ‡πÉ‡∏´‡∏°‡πà');
      console.log('   3. ‡∏£‡∏±‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏ô‡∏µ‡πâ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
    }
    
    console.log('\n‚úÖ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô');
    
  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error.message);
  }
}

createTestData().catch(console.error);