// ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô getWeekKey ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö TeachingSchedulePage.jsx

// ‚ö†Ô∏è  ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤:
const getWeekKeyOld = (date, type) => {
  const startOfWeek = new Date(date);
  startOfWeek.setDate(date.getDate() - date.getDay()); // Start of week (Sunday)
  const weekId = startOfWeek.toISOString().split('T')[0]; // YYYY-MM-DD format
  return `${type}_${weekId}`;
};

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß - ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 1: ‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏ô‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå
const getWeekKeyFixed = (date, type) => {
  const startOfWeek = new Date(date);
  const dayOfWeek = startOfWeek.getDay(); // 0 = Sunday, 1 = Monday, ..., 6 = Saturday
  
  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‡∏Ç‡∏≠‡∏á‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏±‡πâ‡∏ô
  const mondayOffset = dayOfWeek === 0 ? -6 : 1 - dayOfWeek; // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå (-6), ‡∏≠‡∏∑‡πà‡∏ô‡πÜ (1 - dayOfWeek)
  startOfWeek.setDate(date.getDate() + mondayOffset);
  
  const weekId = startOfWeek.toISOString().split('T')[0]; // YYYY-MM-DD format
  return `${type}_${weekId}`;
};

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß - ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2: ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏¢‡∏Å weekdays/weekends ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
const getWeekKeyV2 = (date, type) => {
  const startOfWeek = new Date(date);
  const dayOfWeek = startOfWeek.getDay(); // 0 = Sunday, 1 = Monday, ..., 6 = Saturday
  
  // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö weekends: ‡πÉ‡∏ä‡πâ‡πÄ‡∏™‡∏≤‡∏£‡πå‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
  if (type.includes('weekends')) {
    // ‡∏´‡∏≤‡∏ß‡∏±‡∏ô‡πÄ‡∏™‡∏≤‡∏£‡πå‡∏Ç‡∏≠‡∏á‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏±‡πâ‡∏ô
    const saturdayOffset = dayOfWeek === 0 ? -1 : 6 - dayOfWeek; // ‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå‡πÑ‡∏õ‡πÄ‡∏™‡∏≤‡∏£‡πå‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤, ‡∏≠‡∏∑‡πà‡∏ô‡πÜ‡πÑ‡∏õ‡πÄ‡∏™‡∏≤‡∏£‡πå‡∏´‡∏ô‡πâ‡∏≤
    startOfWeek.setDate(date.getDate() + saturdayOffset);
  } else {
    // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö weekdays: ‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    const mondayOffset = dayOfWeek === 0 ? -6 : 1 - dayOfWeek; // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå (-6), ‡∏≠‡∏∑‡πà‡∏ô‡πÜ (1 - dayOfWeek)
    startOfWeek.setDate(date.getDate() + mondayOffset);
  }
  
  const weekId = startOfWeek.toISOString().split('T')[0]; // YYYY-MM-DD format
  return `${type}_${weekId}`;
};

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ - ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 3: ‡πÉ‡∏ä‡πâ ISO Week (‡∏á‡πà‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î)
const getWeekKeyRecommended = (date, type) => {
  // ‡πÉ‡∏ä‡πâ ISO week number ‡πÅ‡∏ó‡∏ô date string
  const year = date.getFullYear();
  const week = getISOWeek(date);
  return `${type}_${year}_W${week.toString().padStart(2, '0')}`;
};

// Helper function ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ISO Week
function getISOWeek(date) {
  const d = new Date(date);
  d.setHours(0, 0, 0, 0);
  d.setDate(d.getDate() + 3 - (d.getDay() + 6) % 7);
  const week1 = new Date(d.getFullYear(), 0, 4);
  return 1 + Math.round(((d - week1) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);
}

// üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
console.log('üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤ week key:');

const testDates = [
  new Date('2024-01-19'), // Friday
  new Date('2024-01-20'), // Saturday  
  new Date('2024-01-21'), // Sunday
  new Date('2024-01-22'), // Monday
];

console.log('\nüìä ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:');
testDates.forEach(date => {
  const old = getWeekKeyOld(date, 'teachingSchedules_weekends');
  const fixed = getWeekKeyFixed(date, 'teachingSchedules_weekends');
  const v2 = getWeekKeyV2(date, 'teachingSchedules_weekends');
  const recommended = getWeekKeyRecommended(date, 'teachingSchedules_weekends');
  
  console.log(`${date.toDateString()}:`);
  console.log(`  ‡πÄ‡∏î‡∏¥‡∏°: ${old}`);
  console.log(`  ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ${fixed}`);
  console.log(`  V2: ${v2}`);
  console.log(`  ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: ${recommended}`);
  console.log('  ---');
});

console.log('\n‚úÖ ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:');
console.log('1. ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 1: ‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏ô‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå (‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö weekdays)');
console.log('2. ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2: ‡πÅ‡∏¢‡∏Å logic ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö weekdays/weekends');
console.log('3. ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 3: ‡πÉ‡∏ä‡πâ ISO Week Number (‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ - ‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î)');